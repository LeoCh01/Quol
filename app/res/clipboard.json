{"disable": false, "length": 3, "clipboard": ["def longestNiceSubarray(nums):\n    max_len = 0\n    for i in range(len(nums)):\n        for j in range(i, len(nums)):\n            subarray = nums[i:j+1]\n            \n            # Calculate bitwise AND\n            bitwise_and = subarray[0]\n            for k in range(1, len(subarray)):\n                bitwise_and &= subarray[k]\n            \n            # Check if it's a nice subarray\n            if bitwise_and == 0:\n                max_len = max(max_len, len(subarray))\n    return max_len", "left = 0\n    sum = 0\n    max_len = 0\n    for right in range(len(nums)):\n        sum += nums[right]\n        while sum == 0:\n            max_len = max(max_len, right - left + 1)\n            sum -= nums[left]\n            left += 1\n    return max_len", "left = 0\n    right = 0\n    max_len = 0\n    bitmask = 0\n\n    while right < len(nums):\n        if (bitmask & (1 << nums[right])) == 0:\n            bitmask |= (1 << nums[right])\n            max_len = max(max_len, right - left + 1)\n            right += 1\n        else:\n            while (bitmask & (1 << nums[right])) != 0:\n                bitmask &= ~(1 << nums[right])\n                right += 1\n            \n    return max_len"]}